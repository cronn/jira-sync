buildscript {
	ext {
		springBootVersion = '1.5.22.RELEASE'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.22.RELEASE")
		classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.1.1'
	}
}

plugins {
	id 'java'
	id 'jacoco'
	id 'eclipse'
	id 'idea'

	id 'com.github.kt3k.coveralls' version '2.10.2'
}

apply plugin: 'org.sonarqube'
apply plugin: 'org.springframework.boot'

group = 'de.cronn'

if (project.hasProperty('projectVersion')) {
	version = projectVersion
} else if (System.env.BUILD_NUMBER) {
	version = "1.0-SNAPSHOT-b" + System.env.BUILD_NUMBER
} else {
	version = "1.0"
}

plugins.withType(JacocoPlugin) {
	tasks["test"].finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

springBoot {
	executable = true
}

bootRun {
	systemProperties = System.properties
}

eclipse.classpath {
	downloadSources = true
}

idea.module {
	downloadJavadoc = true
	downloadSources = true
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	implementation 'javax.annotation:javax.annotation-api:latest.release'

	implementation('org.springframework.boot:spring-boot-starter')
	implementation('org.springframework.boot:spring-boot-starter-cache')
	implementation('javax.cache:cache-api')
	implementation('org.ehcache:ehcache')

	implementation 'org.apache.httpcomponents:httpclient'
	implementation 'org.apache.commons:commons-lang3:latest.release'

	implementation("org.springframework:spring-web")
	implementation("com.fasterxml.jackson.core:jackson-databind")
	implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

	implementation("de.cronn:reflection-util:2.14.0")
	implementation("de.cronn:ssh-proxy:latest.release")

	testImplementation("org.mockito:mockito-core:3.5.13")
	testImplementation("org.assertj:assertj-core:3.17.2")
	testImplementation("nl.jqno.equalsverifier:equalsverifier:latest.release")
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation("org.springframework.boot:spring-boot-starter-web")

	components.all { ComponentMetadataDetails details ->
		if (details.id.version =~ /(?i).+([-.])(CANDIDATE|RC|BETA|ALPHA).*/) {
			details.status = 'milestone'
		}
	}
}

dependencyLocking {
	lockAllConfigurations()
}

wrapper {
	gradleVersion = "6.7"
	distributionType = Wrapper.DistributionType.ALL
}
